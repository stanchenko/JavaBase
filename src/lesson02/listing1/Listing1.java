package lesson02.listing1;

public class Listing1 {
    public static void main(String[] args) throws InterruptedException {
        System.out.println("Hello");

    /*
    Примитивный тип характерезуется. Переменная это именнованная область памяти, ячейка памяти. Есть имя могу к ней
    обратиться. Обращаясь к области памяти по имени я получаю значение которое в этой области памяти храниться.
    Обращаетесь по имени получаете значение.
            В ссылочной получается область памяти куда потом надо будит обратиться.
    1. Этап это объявление переменной.  Тип вначале имя потом. Int a;
    2. Этап это инициализация переменной. Присваивание ей значения.
            Возможно объявление с инициализацией. Byte c = 10;
    Из младшего типа можно положить в более старший тип,
    из старшего в младший положить нельзя даже если оно туда влезает

     */

        int a = 256;
        byte d = (byte)a;  //явное приведение типа, слева младший - справа старший
        a=d;  //неявное приведение типа происходит автоматически,т.е это когда маньшее значение помещается в больший тип слева старший - справа младий


        System.out.println("d=" + d);
        System.out.println((byte)346);  // 346 - 256 = 90
        System.out.println((short)56732); //от текущего значения отнять ширину диапазона 56732 - 65536 = 8804

        System.out.println((byte)178);
        System.out.println(178-256);
        System.out.println(2148000000L); // по дефолту без указания типа джава может работать только со значениями типа интежер

        double f = 10;
        System.out.println("f=" + f);

        float z = 10.9f; //вещественные значения все по умолчанию добле, поэтому надо ставить f

        boolean g = true;
        System.out.println("g=" + g);

        // Существует три способа инициализации переменной типа чар
        char c = 'a'; // двойные кавычки указывать нельзя. т.к. чар приметивный тип, а кавычки указывают на стрингу а стринга это не примитивный тип
        // только один символ
        System.out.println("c=" + c);

        char cc = 87;
        System.out.println("cc="+cc); //вариант с использованием аски ASCii кода или его еще называют html-code
        Thread.sleep(5000);
        char ccc = '\u0057';
        System.out.println("ccc="+ccc);
    }
}
